<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="1" passed="0" failed="1" skipped="0">
  <reporter-output>
    <line>
      <![CDATA[RowCount:4]]>
    </line>
    <line>
      <![CDATA[UN:abcd]]>
    </line>
    <line>
      <![CDATA[PW:xyz]]>
    </line>
    <line>
      <![CDATA[UN:admin]]>
    </line>
    <line>
      <![CDATA[PW:damager]]>
    </line>
    <line>
      <![CDATA[UN:admin]]>
    </line>
    <line>
      <![CDATA[PW:]]>
    </line>
    <line>
      <![CDATA[UN:xyz]]>
    </line>
    <line>
      <![CDATA[PW:manager]]>
    </line>
    <line>
      <![CDATA[Test testInvalidLogin is FAIL/SKIP]]>
    </line>
  </reporter-output>
  <suite started-at="2022-03-25T21:08:11 IST" name="Default suite" finished-at="2022-03-25T21:08:35 IST" duration-ms="23955">
    <groups>
    </groups>
    <test started-at="2022-03-25T21:08:11 IST" name="Default test" finished-at="2022-03-25T21:08:35 IST" duration-ms="23955">
      <class name="script.InvalidLogin">
        <test-method is-config="true" signature="openApp()[pri:0, instance:script.InvalidLogin@20f5239f]" started-at="2022-03-25T21:08:11 IST" name="openApp" finished-at="2022-03-25T21:08:26 IST" duration-ms="14909" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApp -->
        <test-method signature="testInvalidLogin()[pri:2, instance:script.InvalidLogin@20f5239f]" started-at="2022-03-25T21:08:26 IST" name="testInvalidLogin" finished-at="2022-03-25T21:08:35 IST" duration-ms="8681" status="FAIL">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Parameter 'destFile' is not a file: .\images]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Parameter 'destFile' is not a file: .\images
at org.apache.commons.io.FileUtils.requireFile(FileUtils.java:2737)
at org.apache.commons.io.FileUtils.requireFileIfExists(FileUtils.java:2766)
at org.apache.commons.io.FileUtils.copyFile(FileUtils.java:844)
at org.apache.commons.io.FileUtils.copyFile(FileUtils.java:756)
at script.InvalidLogin.testInvalidLogin(InvalidLogin.java:45)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
            <line>
              <![CDATA[RowCount:4]]>
            </line>
            <line>
              <![CDATA[UN:abcd]]>
            </line>
            <line>
              <![CDATA[PW:xyz]]>
            </line>
            <line>
              <![CDATA[UN:admin]]>
            </line>
            <line>
              <![CDATA[PW:damager]]>
            </line>
            <line>
              <![CDATA[UN:admin]]>
            </line>
            <line>
              <![CDATA[PW:]]>
            </line>
            <line>
              <![CDATA[UN:xyz]]>
            </line>
            <line>
              <![CDATA[PW:manager]]>
            </line>
          </reporter-output>
        </test-method> <!-- testInvalidLogin -->
        <test-method is-config="true" signature="closeApp(org.testng.ITestResult)[pri:0, instance:script.InvalidLogin@20f5239f]" started-at="2022-03-25T21:08:35 IST" name="closeApp" finished-at="2022-03-25T21:08:35 IST" duration-ms="313" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testInvalidLogin status=FAILURE method=InvalidLogin.testInvalidLogin()[pri:2, instance:script.InvalidLogin@20f5239f] output=RowCount:4]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Test testInvalidLogin is FAIL/SKIP]]>
            </line>
          </reporter-output>
        </test-method> <!-- closeApp -->
      </class> <!-- script.InvalidLogin -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
